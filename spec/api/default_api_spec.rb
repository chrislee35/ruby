=begin
#Backscatter.io

#[This is the Backscatter.io API.](https://backscatter.io/developers) 

OpenAPI spec version: 1.0.0
Contact: info@backscatter.io
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DefaultApi)
    end
  end

  # unit tests for enrich_asn
  # enriches asn
  # returns enrichment data for an ASN
  # @param query 
  # @param [Hash] opts the optional parameters
  # @return [ASNEnrichment]
  describe 'enrich_asn test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enrich_ip
  # enriches ip
  # returns enrichment data for an ip
  # @param query 
  # @param [Hash] opts the optional parameters
  # @return [IPEnrichment]
  describe 'enrich_ip test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enrich_network
  # enriches network
  # returns enrichment data for a network
  # @param query 
  # @param [Hash] opts the optional parameters
  # @return [NetworkEnrichment]
  describe 'enrich_network test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for hello
  # authenticate to the service
  # @param [Hash] opts the optional parameters
  # @return [Hello]
  describe 'hello test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for observations
  # fetches observations for a given ip address
  # @param query_type query type ip, network, asn, port, country
  # @param query ip address, cidr block, asn, port, or country
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope timeframe to search over, e.g., 1d, 7d
  # @return [Observations]
  describe 'observations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for trends
  # Top N items
  # A listing of the top N items observered over the query scope
  # @param trend_type which item type you want to perform a trend over
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope timeframe to search over, e.g., 1d, 7d
  # @return [Trends]
  describe 'trends test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
